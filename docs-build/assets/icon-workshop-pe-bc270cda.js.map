{"version":3,"file":"icon-workshop-pe-bc270cda.js","sources":["../../src/shared/ui/core/atoms/icons/commonIcons/icon-sun.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-eye.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-home.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-moon.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-plus.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-type.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-check.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-search.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-chevron.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-x-close.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-home-alt.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-straight-arrow.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-slanted-arrow.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-calendar.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-expand.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-info-circle.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-globe.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-star-alt.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-link.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-telegram.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-klgtu-app.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-hidden.tsx","../../src/shared/ui/core/atoms/icons/commonIcons/icon-copy.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-exam.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-other.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-credit.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-unknow.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-window.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-consult.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-day-off.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-holiday.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-lecture.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-distance.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-workshop.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-to-n-pair.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-laboratory.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-diff-credit.tsx","../../src/shared/ui/core/atoms/icons/timetableIcons/icon-workshop-pe.tsx"],"sourcesContent":["import { TBaseIconProps } from \"../types\";\n\nexport const IconSun = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 22} height={size ?? 22} viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11 0C11.5523 0 12 0.447715 12 1V3C12 3.55228 11.5523 4 11 4C10.4477 4 10 3.55228 10 3V1C10 0.447715 10.4477 0 11 0ZM3.1928 3.1928C3.58332 2.80227 4.21648 2.80227 4.60701 3.1928L6.02122 4.60701C6.41175 4.99753 6.41175 5.6307 6.02122 6.02122C5.6307 6.41175 4.99753 6.41175 4.60701 6.02122L3.1928 4.60701C2.80227 4.21648 2.80227 3.58332 3.1928 3.1928ZM18.8072 3.1928C19.1977 3.58332 19.1977 4.21648 18.8072 4.60701L17.393 6.02122C17.0025 6.41175 16.3693 6.41175 15.9788 6.02122C15.5883 5.6307 15.5883 4.99753 15.9788 4.60701L17.393 3.1928C17.7835 2.80227 18.4167 2.80227 18.8072 3.1928ZM11 7C8.79086 7 7 8.79086 7 11C7 13.2091 8.79086 15 11 15C13.2091 15 15 13.2091 15 11C15 8.79086 13.2091 7 11 7ZM5 11C5 7.68629 7.68629 5 11 5C14.3137 5 17 7.68629 17 11C17 14.3137 14.3137 17 11 17C7.68629 17 5 14.3137 5 11ZM0 11C0 10.4477 0.447715 10 1 10H3C3.55228 10 4 10.4477 4 11C4 11.5523 3.55228 12 3 12H1C0.447715 12 0 11.5523 0 11ZM18 11C18 10.4477 18.4477 10 19 10H21C21.5523 10 22 10.4477 22 11C22 11.5523 21.5523 12 21 12H19C18.4477 12 18 11.5523 18 11ZM6.02122 15.9829C6.41175 16.3734 6.41175 17.0066 6.02122 17.3971L4.60701 18.8113C4.21648 19.2018 3.58332 19.2018 3.1928 18.8113C2.80227 18.4208 2.80227 17.7876 3.1928 17.3971L4.60701 15.9829C4.99753 15.5924 5.6307 15.5924 6.02122 15.9829ZM15.9788 15.9829C16.3693 15.5924 17.0025 15.5924 17.393 15.9829L18.8072 17.3971C19.1977 17.7876 19.1977 18.4208 18.8072 18.8113C18.4167 19.2018 17.7835 19.2018 17.393 18.8113L15.9788 17.3971C15.5883 17.0066 15.5883 16.3734 15.9788 15.9829ZM11 18C11.5523 18 12 18.4477 12 19V21C12 21.5523 11.5523 22 11 22C10.4477 22 10 21.5523 10 21V19C10 18.4477 10.4477 18 11 18Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconEye = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.97765 6.72532C6.73909 5.26802 9.1049 4 12 4C14.8951 4 17.2609 5.26802 19.0224 6.72532C20.7818 8.18094 21.9899 9.86623 22.5953 10.8165L22.6188 10.8533C22.7406 11.0435 22.8834 11.2667 22.9561 11.5814C23.0146 11.8343 23.0146 12.1657 22.9561 12.4186C22.8834 12.7333 22.7406 12.9565 22.6188 13.1467L22.5953 13.1835C21.9899 14.1338 20.7818 15.8191 19.0224 17.2747C17.2609 18.732 14.8951 20 12 20C9.1049 20 6.73909 18.732 4.97765 17.2747C3.21823 15.8191 2.01013 14.1338 1.40468 13.1835L1.3812 13.1467C1.25944 12.9565 1.11664 12.7334 1.04386 12.4186C0.98538 12.1657 0.98538 11.8343 1.04386 11.5814C1.11664 11.2666 1.25944 11.0435 1.38121 10.8533L1.40468 10.8165C2.01013 9.86623 3.21822 8.18094 4.97765 6.72532ZM2.85909 11.7271C3.41286 10.8579 4.50963 9.33355 6.07987 8.03444C7.64809 6.73701 9.63672 5.70517 12 5.70517C14.3633 5.70517 16.3519 6.737 17.9201 8.03444C19.4904 9.33355 20.5871 10.8579 21.1409 11.7271L21.2699 12L21.1409 12.2729C20.5871 13.1421 19.4904 14.6665 17.9201 15.9656C16.3519 17.263 14.3633 18.2948 12 18.2948C9.63672 18.2948 7.64809 17.263 6.07987 15.9656C4.50964 14.6665 3.41286 13.1421 2.85909 12.2729L2.72915 12L2.85909 11.7271ZM8.04978 12C8.04978 9.83738 9.81835 8.08424 12 8.08424C14.1816 8.08424 15.9502 9.83738 15.9502 12C15.9502 14.1626 14.1816 15.9158 12 15.9158C9.81835 15.9158 8.04978 14.1626 8.04978 12ZM12 9.78941C10.7684 9.78941 9.76995 10.7791 9.76995 12C9.76995 13.2209 10.7684 14.2106 12 14.2106C13.2316 14.2106 14.23 13.2209 14.23 12C14.23 10.7791 13.2316 9.78941 12 9.78941Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconHome = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.142 18.9748C20.1698 18.6321 20.1698 18.2152 20.1698 17.7273V10.3684L20.6415 10.725C21.0167 11.0084 21.5488 10.9318 21.8302 10.5539C22.1115 10.1759 22.0355 9.63967 21.6604 9.35619L12.4491 2.55856C12.1547 2.48048 11.8453 2.48048 11.5509 2.55856L2.33965 9.35619C1.96454 9.63967 1.88852 10.1759 2.16985 10.5539C2.45119 10.9318 2.98334 11.0084 3.35846 10.725L3.83024 10.3684L3.83024 17.7273C3.83023 18.2152 3.83022 18.6321 3.858 18.9748C3.88722 19.3352 3.95137 19.688 4.12226 20.026C4.37912 20.5339 4.78899 20.9469 5.29311 21.2058C5.62849 21.3779 5.97866 21.4426 6.33635 21.472C6.67637 21.5 7.09013 21.5 7.57429 21.5H16.4257C16.9099 21.5 17.3236 21.5 17.6637 21.472C18.0213 21.4426 18.3715 21.3779 18.7069 21.2058C19.211 20.9469 19.6209 20.5339 19.8777 20.026C20.0486 19.688 20.1128 19.3352 20.142 18.9748ZM10.7524 5.13715L5.52825 9.0852V17.6939C5.52825 18.2244 5.52891 18.5708 5.55037 18.8354C5.57101 19.09 5.6066 19.1927 5.63519 19.2492C5.72926 19.4352 5.87937 19.5865 6.06399 19.6813C6.1201 19.7101 6.22194 19.7459 6.47462 19.7667C6.73722 19.7884 7.08104 19.789 7.60755 19.789H8.40571L8.40571 13.7931C8.40569 13.5591 8.40567 13.335 8.421 13.1458C8.43776 12.9392 8.47697 12.7002 8.59799 12.4609C8.76712 12.1264 9.03699 11.8545 9.36893 11.684C9.60644 11.5621 9.84361 11.5226 10.0487 11.5057C10.2364 11.4902 10.4589 11.4903 10.6911 11.4903H13.3089C13.5411 11.4903 13.7636 11.4902 13.9513 11.5057C14.1564 11.5226 14.3936 11.5621 14.6311 11.684C14.963 11.8545 15.2329 12.1264 15.402 12.4609C15.523 12.7002 15.5622 12.9392 15.579 13.1458C15.5943 13.335 15.5943 13.5591 15.5943 13.7931L15.5943 19.789H16.3925C16.919 19.789 17.2628 19.7884 17.5254 19.7667C17.7781 19.7459 17.8799 19.7101 17.936 19.6813C18.1206 19.5865 18.2707 19.4352 18.3648 19.2492C18.3934 19.1927 18.429 19.09 18.4496 18.8354C18.4711 18.5708 18.4718 18.2244 18.4718 17.6939V9.0852L13.2476 5.13715L13.2436 5.13417C12.5565 4.61493 12.396 4.51284 12.2498 4.47407C12.0861 4.43064 11.914 4.43064 11.7502 4.47407C11.6038 4.51291 11.4429 4.61532 10.7524 5.13715ZM10.1037 19.789H13.8963V13.8211C13.8963 13.5488 13.8956 13.396 13.8866 13.2852C13.8843 13.256 13.8817 13.2303 13.8797 13.2179C13.8779 13.2159 13.8818 13.2198 13.8797 13.2179C13.8675 13.216 13.842 13.2134 13.813 13.211C13.703 13.2019 13.5514 13.2013 13.2811 13.2013H10.7189C10.4486 13.2013 10.297 13.2019 10.187 13.211C10.158 13.2134 10.1325 13.216 10.1203 13.2179C10.1182 13.2198 10.1221 13.2159 10.1203 13.2179C10.1183 13.2303 10.1157 13.256 10.1134 13.2852C10.1044 13.396 10.1037 13.5488 10.1037 13.8211V19.789Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconMoon = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.08248 2.24869C9.33231 2.49852 9.40131 2.87695 9.25572 3.19887C8.76091 4.29301 8.48503 5.50811 8.48503 6.78993C8.48503 11.6086 12.3914 15.515 17.2101 15.515C18.4919 15.515 19.707 15.2391 20.8011 14.7443C21.123 14.5987 21.5015 14.6677 21.7513 14.9175C22.0011 15.1673 22.0701 15.5458 21.9245 15.8677C20.2899 19.4822 16.6514 22 12.423 22C6.66656 22 2 17.3334 2 11.577C2 7.34858 4.51777 3.71008 8.1323 2.07545C8.45422 1.92987 8.83265 1.99887 9.08248 2.24869ZM6.98626 4.75229C4.98148 6.35152 3.69802 8.8149 3.69802 11.577C3.69802 16.3957 7.60434 20.302 12.423 20.302C15.1851 20.302 17.6485 19.0185 19.2477 17.0137C18.5884 17.1445 17.907 17.213 17.2101 17.213C11.4536 17.213 6.78702 12.5464 6.78702 6.78993C6.78702 6.09301 6.85553 5.41161 6.98626 4.75229Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconPlus = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12 4C12.5523 4 13 4.44772 13 5V11H19C19.5523 11 20 11.4477 20 12C20 12.5523 19.5523 13 19 13H13V19C13 19.5523 12.5523 20 12 20C11.4477 20 11 19.5523 11 19V13H5C4.44772 13 4 12.5523 4 12C4 11.4477 4.44772 11 5 11H11V5C11 4.44772 11.4477 4 12 4Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconType = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.87848 3H17.1215C17.5722 2.99999 17.9527 2.99998 18.266 3.02136C18.5935 3.0437 18.9091 3.0922 19.2172 3.21983C19.9249 3.51294 20.4871 4.07515 20.7802 4.78278C20.9078 5.0909 20.9563 5.40654 20.9786 5.73397C21 6.04724 21 6.42774 21 6.87838V6.90662C21 7.37639 20.6192 7.75722 20.1494 7.75722C19.6796 7.75722 19.2988 7.37639 19.2988 6.90662C19.2988 6.42034 19.2984 6.09823 19.2814 5.84977C19.265 5.60896 19.2359 5.50008 19.2085 5.43379C19.088 5.14301 18.857 4.91197 18.5662 4.79153C18.4999 4.76407 18.391 4.73503 18.1502 4.7186C17.9018 4.70165 17.5797 4.70119 17.0934 4.70119H12.8506V19.2988H15.056C15.5258 19.2988 15.9066 19.6796 15.9066 20.1494C15.9066 20.6192 15.5258 21 15.056 21H8.94397C8.4742 21 8.09338 20.6192 8.09338 20.1494C8.09338 19.6796 8.4742 19.2988 8.94397 19.2988H11.1494V4.70119H6.90662C6.42034 4.70119 6.09823 4.70165 5.84977 4.7186C5.60896 4.73503 5.50008 4.76407 5.43379 4.79153C5.143 4.91197 4.91197 5.143 4.79153 5.43379C4.76407 5.50008 4.73503 5.60896 4.7186 5.84977C4.70165 6.09823 4.70119 6.42034 4.70119 6.90662C4.70119 7.37639 4.32037 7.75722 3.85059 7.75722C3.38082 7.75722 3 7.37639 3 6.90662L3 6.87848C2.99999 6.4278 2.99998 6.04726 3.02136 5.73397C3.0437 5.40654 3.0922 5.0909 3.21983 4.78278C3.51294 4.07515 4.07515 3.51294 4.78278 3.21983C5.0909 3.0922 5.40654 3.0437 5.73397 3.02136C6.04726 2.99998 6.4278 2.99999 6.87848 3Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconCheck = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.7071 5.79289C21.0976 6.18342 21.0976 6.81658 20.7071 7.20711L9.70711 18.2071C9.31658 18.5976 8.68342 18.5976 8.29289 18.2071L3.29289 13.2071C2.90237 12.8166 2.90237 12.1834 3.29289 11.7929C3.68342 11.4024 4.31658 11.4024 4.70711 11.7929L9 16.0858L19.2929 5.79289C19.6834 5.40237 20.3166 5.40237 20.7071 5.79289Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconSearch = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 4C6.68629 4 4 6.68629 4 10C4 13.3137 6.68629 16 10 16C13.3137 16 16 13.3137 16 10C16 6.68629 13.3137 4 10 4ZM2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10C18 11.8487 17.3729 13.5509 16.3199 14.9056L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L14.9057 16.3198C13.551 17.3729 11.8487 18 10 18C5.58172 18 2 14.4183 2 10Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TDirectedIconProps } from \"../types\";\n\n\nexport const IconChevron = ({ color, size, direction = 'up' }: TDirectedIconProps) => {\n  return (\n    <svg\n      width={size ?? 24}\n      height={size ?? 24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      transform={\n        direction === 'up' ?\n          \"rotate(0)\"\n          :\n          direction === \"down\" ?\n            \"rotate(180)\"\n            :\n            direction === \"left\" ?\n              \"rotate(270)\"\n              :\n              \"rotate(90)\"\n      }>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.2929 8.29289C11.6834 7.90237 12.3166 7.90237 12.7071 8.29289L18.7071 14.2929C19.0976 14.6834 19.0976 15.3166 18.7071 15.7071C18.3166 16.0976 17.6834 16.0976 17.2929 15.7071L12 10.4142L6.70711 15.7071C6.31658 16.0976 5.68342 16.0976 5.29289 15.7071C4.90237 15.3166 4.90237 14.6834 5.29289 14.2929L11.2929 8.29289Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconXClose = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L12 10.5858L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L13.4142 12L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L12 13.4142L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L10.5858 12L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconHomeAlt = ({ color, size }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.0016 4.23185C12.0005 4.23182 11.9995 4.23182 11.9984 4.23185C11.9907 4.23651 11.979 4.24383 11.9629 4.25478C11.8928 4.30244 11.8014 4.37418 11.6328 4.5077L5.49152 9.3703C5.04298 9.72545 4.95164 9.8073 4.88952 9.8928C4.82006 9.98841 4.76831 10.0961 4.73683 10.2106C4.70867 10.3131 4.70128 10.4367 4.70128 11.0152V17.6843C4.70128 18.2149 4.70194 18.5607 4.72313 18.8247C4.7435 19.0786 4.77854 19.1796 4.80595 19.2343C4.89803 19.4183 5.04495 19.5679 5.22565 19.6616C5.27945 19.6895 5.37868 19.7252 5.62806 19.7459C5.88737 19.7675 6.22707 19.7682 6.74822 19.7682H8.43298L8.43298 13.7845C8.43295 13.5508 8.43293 13.3264 8.44814 13.1368C8.46478 12.9296 8.50375 12.6891 8.62438 12.4481C8.79274 12.1117 9.06138 11.8382 9.39181 11.6668C9.62855 11.544 9.86476 11.5044 10.0683 11.4874C10.2545 11.4719 10.475 11.472 10.7046 11.472H13.2954C13.525 11.472 13.7455 11.4719 13.9316 11.4874C14.1352 11.5044 14.3715 11.544 14.6082 11.6668C14.9386 11.8382 15.2073 12.1117 15.3756 12.4481C15.4962 12.6891 15.5352 12.9296 15.5519 13.1368C15.5671 13.3264 15.567 13.5508 15.567 13.7845L15.567 19.7682H17.2518C17.7729 19.7682 18.1126 19.7675 18.3719 19.7459C18.6213 19.7252 18.7205 19.6895 18.7743 19.6616C18.9551 19.5679 19.102 19.4183 19.194 19.2343C19.2215 19.1796 19.2565 19.0786 19.2769 18.8247C19.2981 18.5607 19.2987 18.2149 19.2987 17.6843V11.0152C19.2987 10.4367 19.2913 10.3131 19.2632 10.2106C19.2317 10.0961 19.1799 9.98841 19.1105 9.8928C19.0484 9.8073 18.957 9.72545 18.5085 9.3703L12.3672 4.5077C12.1986 4.37418 12.1072 4.30244 12.0371 4.25478C12.021 4.24383 12.0093 4.23651 12.0016 4.23185ZM11.5411 2.56213C11.8416 2.47929 12.1584 2.47929 12.4589 2.56213C12.8073 2.65814 13.1011 2.89282 13.3446 3.08728C13.3674 3.10548 13.3898 3.12333 13.4117 3.14068L19.5529 8.00328C19.5759 8.02151 19.5987 8.03954 19.6213 8.0574C19.9645 8.32857 20.259 8.56128 20.4782 8.86297C20.6707 9.12795 20.8141 9.42646 20.9014 9.74383C21.0007 10.1052 21.0004 10.4847 20.9999 10.927C20.9999 10.9561 20.9999 10.9855 20.9999 11.0152V17.7181C20.9999 18.2055 20.9999 18.6227 20.9724 18.9657C20.9434 19.3267 20.8798 19.681 20.7098 20.0206C20.4546 20.5304 20.0475 20.9449 19.5467 21.2047C19.2131 21.3777 18.8651 21.4425 18.5105 21.472C18.1736 21.5 17.7637 21.5 17.2849 21.5L15.4204 21.5C15.312 21.5 15.1853 21.5001 15.0742 21.4908C14.9461 21.4802 14.7658 21.4531 14.5775 21.3554C14.3322 21.2282 14.1329 21.0252 14.0079 20.7755C13.912 20.5838 13.8853 20.4003 13.8748 20.2699C13.8658 20.1567 13.8658 20.0278 13.8658 19.9174L13.8659 13.8128C13.8659 13.5404 13.8652 13.3881 13.8563 13.2779C13.8542 13.2513 13.8519 13.2327 13.8501 13.2205C13.8499 13.2203 13.8503 13.2207 13.8501 13.2205C13.8381 13.2187 13.8192 13.2157 13.7931 13.2135C13.6848 13.2045 13.5353 13.2038 13.2677 13.2038H10.7323C10.4647 13.2038 10.3152 13.2045 10.2069 13.2135C10.1808 13.2157 10.1625 13.218 10.1506 13.2198C10.1503 13.2201 10.1508 13.2196 10.1506 13.2198C10.1488 13.232 10.1458 13.2513 10.1437 13.2779C10.1348 13.3881 10.1341 13.5404 10.1341 13.8128L10.1342 19.9174C10.1342 20.0278 10.1342 20.1567 10.1252 20.2699C10.1147 20.4003 10.088 20.5838 9.99209 20.7755C9.86714 21.0252 9.66776 21.2282 9.42252 21.3554C9.2342 21.4531 9.0539 21.4802 8.9258 21.4908C8.81467 21.5001 8.68802 21.5 8.57956 21.5L6.71508 21.5C6.23625 21.5 5.82643 21.5 5.48953 21.472C5.13495 21.4425 4.78692 21.3777 4.45334 21.2047C3.95253 20.9449 3.54537 20.5304 3.2902 20.0206C3.12023 19.681 3.05658 19.3267 3.02761 18.9657C3.00008 18.6227 3.0001 18.2055 3.00011 17.7181L3.00011 11.0152C3.00011 10.9855 3.00008 10.9561 3.00005 10.927C2.99963 10.4847 2.99927 10.1052 3.09862 9.74383C3.18589 9.42645 3.3293 9.12795 3.52181 8.86297C3.741 8.56128 4.0355 8.32857 4.37867 8.05739C4.40127 8.03953 4.42409 8.0215 4.44711 8.00328L10.5883 3.14068C10.6102 3.12333 10.6326 3.10548 10.6554 3.08728C10.8989 2.89282 11.1927 2.65814 11.5411 2.56213Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TDirectedIconProps } from \"../types\";\n\nexport const IconStraightArrow = ({ size, color, direction = 'up' }: TDirectedIconProps) => {\n  return (\n    <svg\n      width={size ?? 24}\n      height={size ?? 24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      transform={\n        direction === 'up' ?\n          \"rotate(0)\"\n          :\n          direction === \"down\" ?\n            \"rotate(180)\"\n            :\n            direction === \"left\" ?\n              \"rotate(270)\"\n              :\n              \"rotate(90)\"\n      }>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.2929 4.29289C11.6834 3.90237 12.3166 3.90237 12.7071 4.29289L19.7071 11.2929C20.0976 11.6834 20.0976 12.3166 19.7071 12.7071C19.3166 13.0976 18.6834 13.0976 18.2929 12.7071L13 7.41421V19C13 19.5523 12.5523 20 12 20C11.4477 20 11 19.5523 11 19V7.41421L5.70711 12.7071C5.31658 13.0976 4.68342 13.0976 4.29289 12.7071C3.90237 12.3166 3.90237 11.6834 4.29289 11.2929L11.2929 4.29289Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TDirectedIconProps } from \"../types\";\n\nexport const IconSlantedArrow = ({ size, color, direction = 'up' }: TDirectedIconProps) => {\n  return (\n    <svg\n      width={size ?? 24}\n      height={size ?? 24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      transform={\n        direction === 'up' ?\n          \"rotate(0)\"\n          :\n          direction === \"down\" ?\n            \"rotate(180)\"\n            :\n            direction === \"left\" ?\n              \"rotate(270)\"\n              :\n              \"rotate(90)\"\n      }>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9 6C9 5.44772 9.44772 5 10 5H18C18.5523 5 19 5.44772 19 6V14C19 14.5523 18.5523 15 18 15C17.4477 15 17 14.5523 17 14V8.41421L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L15.5858 7H10C9.44772 7 9 6.55228 9 6Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconCalendar = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 1C8.55229 1 9 1.44772 9 2V3H15V2C15 1.44772 15.4477 1 16 1C16.5523 1 17 1.44772 17 2V3.00163C17.4755 3.00489 17.891 3.01471 18.2518 3.04419C18.8139 3.09012 19.3306 3.18868 19.816 3.43597C20.5686 3.81947 21.1805 4.43139 21.564 5.18404C21.8113 5.66937 21.9099 6.18608 21.9558 6.74817C22 7.28936 22 7.95372 22 8.75868V17.2413C22 18.0463 22 18.7106 21.9558 19.2518C21.9099 19.8139 21.8113 20.3306 21.564 20.816C21.1805 21.5686 20.5686 22.1805 19.816 22.564C19.3306 22.8113 18.8139 22.9099 18.2518 22.9558C17.7106 23 17.0463 23 16.2413 23H7.75868C6.95372 23 6.28936 23 5.74817 22.9558C5.18608 22.9099 4.66937 22.8113 4.18404 22.564C3.43139 22.1805 2.81947 21.5686 2.43597 20.816C2.18868 20.3306 2.09012 19.8139 2.04419 19.2518C1.99998 18.7106 1.99999 18.0463 2 17.2413V8.7587C1.99999 7.95373 1.99998 7.28937 2.04419 6.74817C2.09012 6.18608 2.18868 5.66937 2.43597 5.18404C2.81947 4.43139 3.43139 3.81947 4.18404 3.43597C4.66937 3.18868 5.18608 3.09012 5.74818 3.04419C6.10898 3.01471 6.52454 3.00489 7 3.00163V2C7 1.44772 7.44772 1 8 1ZM7 5.00176C6.55447 5.00489 6.20463 5.01356 5.91104 5.03755C5.47262 5.07337 5.24842 5.1383 5.09202 5.21799C4.7157 5.40973 4.40973 5.71569 4.21799 6.09202C4.1383 6.24842 4.07337 6.47262 4.03755 6.91104C4.00078 7.36113 4 7.94342 4 8.8V9H20V8.8C20 7.94342 19.9992 7.36113 19.9624 6.91104C19.9266 6.47262 19.8617 6.24842 19.782 6.09202C19.5903 5.7157 19.2843 5.40973 18.908 5.21799C18.7516 5.1383 18.5274 5.07337 18.089 5.03755C17.7954 5.01356 17.4455 5.00489 17 5.00176V6C17 6.55228 16.5523 7 16 7C15.4477 7 15 6.55228 15 6V5H9V6C9 6.55228 8.55229 7 8 7C7.44772 7 7 6.55228 7 6V5.00176ZM20 11H4V17.2C4 18.0566 4.00078 18.6389 4.03755 19.089C4.07337 19.5274 4.1383 19.7516 4.21799 19.908C4.40973 20.2843 4.7157 20.5903 5.09202 20.782C5.24842 20.8617 5.47262 20.9266 5.91104 20.9624C6.36113 20.9992 6.94342 21 7.8 21H16.2C17.0566 21 17.6389 20.9992 18.089 20.9624C18.5274 20.9266 18.7516 20.8617 18.908 20.782C19.2843 20.5903 19.5903 20.2843 19.782 19.908C19.8617 19.7516 19.9266 19.5274 19.9624 19.089C19.9992 18.6389 20 18.0566 20 17.2V11Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconExpand = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15 4C14.4477 4 14 3.55228 14 3C14 2.44772 14.4477 2 15 2H21C21.5523 2 22 2.44772 22 3V9C22 9.55228 21.5523 10 21 10C20.4477 10 20 9.55228 20 9V5.41421L14.7071 10.7071C14.3166 11.0976 13.6834 11.0976 13.2929 10.7071C12.9024 10.3166 12.9024 9.68342 13.2929 9.29289L18.5858 4H15ZM10.7071 13.2929C11.0976 13.6834 11.0976 14.3166 10.7071 14.7071L5.41421 20H9C9.55228 20 10 20.4477 10 21C10 21.5523 9.55228 22 9 22H3C2.73478 22 2.48043 21.8946 2.29289 21.7071C2.10536 21.5196 2 21.2652 2 21L2 15C2 14.4477 2.44772 14 3 14C3.55229 14 4 14.4477 4 15L4 18.5858L9.29289 13.2929C9.68342 12.9024 10.3166 12.9024 10.7071 13.2929Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconInfoCircle = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12 3.81818C7.48131 3.81818 3.81818 7.48131 3.81818 12C3.81818 16.5187 7.48131 20.1818 12 20.1818C16.5187 20.1818 20.1818 16.5187 20.1818 12C20.1818 7.48131 16.5187 3.81818 12 3.81818ZM2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM12.0091 7.45455C12.5112 7.45455 12.9182 7.86156 12.9182 8.36364V12C12.9182 12.5021 12.5112 12.9091 12.0091 12.9091C11.507 12.9091 11.1 12.5021 11.1 12V8.36364C11.1 7.86156 11.507 7.45455 12.0091 7.45455ZM11.0909 15.6364C11.0909 15.1343 11.4979 14.7273 12 14.7273H12.0091C12.5112 14.7273 12.9182 15.1343 12.9182 15.6364C12.9182 16.1384 12.5112 16.5455 12.0091 16.5455H12C11.4979 16.5455 11.0909 16.1384 11.0909 15.6364Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconGlobe = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.7409 11.151H7.53141C7.73138 8.55436 8.61035 6.06307 10.0697 3.92359C6.68272 4.7301 4.10038 7.61196 3.7409 11.151ZM12 4.1608C10.4185 6.17141 9.45702 8.60113 9.23511 11.151H14.7649C14.543 8.60113 13.5815 6.17141 12 4.1608ZM14.7649 12.849C14.543 15.3989 13.5815 17.8286 12 19.8392C10.4185 17.8286 9.45702 15.3989 9.23511 12.849H14.7649ZM7.53141 12.849H3.7409C4.10038 16.388 6.68272 19.2699 10.0697 20.0764C8.61035 17.9369 7.73138 15.4456 7.53141 12.849ZM13.9303 20.0764C15.3897 17.9369 16.2686 15.4456 16.4686 12.849H20.2591C19.8996 16.388 17.3173 19.2699 13.9303 20.0764ZM20.2591 11.151H16.4686C16.2686 8.55436 15.3896 6.06307 13.9303 3.92359C17.3173 4.7301 19.8996 7.61196 20.2591 11.151ZM2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconStarAlt = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12 18C11.366 18 10.8606 17.4659 10.8902 16.8273L11.0397 13.6042L8.16005 15.4024C7.64334 15.7251 6.96467 15.558 6.65354 15.0315C6.32846 14.4814 6.53805 13.7686 7.10795 13.4861L10.1061 12L7.10795 10.5139C6.53805 10.2314 6.32846 9.51863 6.65354 8.96853C6.96467 8.44204 7.64334 8.27495 8.16005 8.59762L11.0397 10.3958L10.8902 7.17275C10.8606 6.53412 11.366 6 12 6C12.634 6 13.1394 6.53411 13.1098 7.17275L12.9603 10.3958L15.8399 8.59762C16.3567 8.27495 17.0353 8.44204 17.3465 8.96853C17.6715 9.51863 17.4619 10.2314 16.892 10.5139L13.8939 12L16.892 13.4861C17.4619 13.7686 17.6715 14.4814 17.3465 15.0315C17.0353 15.558 16.3567 15.7251 15.8399 15.4024L12.9603 13.6042L13.1098 16.8273C13.1394 17.4659 12.634 18 12 18Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconLink = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.4876 4.41142C13.4348 3.49564 14.7037 2.98873 16.0209 3.00019C17.3382 3.01165 18.5981 3.54055 19.5292 4.47266C20.4604 5.40474 20.9884 6.6654 20.9998 7.98308C21.0112 9.30076 20.5052 10.5704 19.5904 11.5185L19.5782 11.5309L17.1647 13.9469C17.1647 13.9469 17.1648 13.9468 17.1647 13.9469C16.6556 14.4566 16.0428 14.851 15.3679 15.103C14.693 15.355 13.9718 15.4588 13.2533 15.4073C12.5347 15.3558 11.8357 15.1502 11.2036 14.8045C10.5715 14.4588 10.0212 13.9812 9.58986 13.4039C9.25927 12.9615 9.34992 12.3349 9.79233 12.0043C10.2347 11.6737 10.8614 11.7643 11.192 12.2068C11.4517 12.5543 11.7829 12.8418 12.1633 13.0498C12.5436 13.2578 12.9641 13.3815 13.3963 13.4124C13.8285 13.4434 14.2623 13.381 14.6683 13.2294C15.0743 13.0778 15.4431 12.8405 15.7496 12.5336L18.1567 10.124C18.7039 9.55387 19.0068 8.79168 18.9999 8.00044C18.993 7.20652 18.6749 6.44727 18.1143 5.88616C17.5538 5.32509 16.7958 5.00701 16.0036 5.00011C15.2136 4.99324 14.4522 5.29635 13.8826 5.84464L12.5043 7.21632C12.1128 7.6059 11.4796 7.60437 11.0901 7.21291C10.7005 6.82144 10.702 6.18828 11.0935 5.7987L12.4773 4.42155L12.4876 4.41142ZM8.63208 8.89696C9.30698 8.64495 10.0282 8.54117 10.7467 8.59268C11.4653 8.64419 12.1643 8.84979 12.7964 9.19548C13.4285 9.54117 13.9788 10.0188 14.4101 10.5961C14.7407 11.0385 14.6501 11.6651 14.2077 11.9957C13.7653 12.3263 13.1386 12.2357 12.808 11.7932C12.5483 11.4457 12.2171 11.1582 11.8367 10.9502C11.4564 10.7422 11.0359 10.6185 10.6037 10.5876C10.1715 10.5566 9.73771 10.619 9.3317 10.7706C8.92569 10.9222 8.55692 11.1595 8.25043 11.4664L5.84327 13.876C5.29607 14.4461 4.99325 15.2083 5.00011 15.9996C5.00701 16.7935 5.32514 17.5527 5.88569 18.1138C6.4462 18.6749 7.20422 18.993 7.99645 18.9999C8.78598 19.0068 9.54691 18.704 10.1164 18.1563L11.4856 16.7857C11.876 16.395 12.5091 16.3947 12.8998 16.785C13.2906 17.1754 13.2909 17.8085 12.9006 18.1992L11.5248 19.5764L11.5124 19.5886C10.5652 20.5044 9.29631 21.0113 7.97905 20.9998C6.6618 20.9884 5.40193 20.4595 4.47076 19.5273C3.53962 18.5953 3.01163 17.3346 3.00019 16.0169C2.98875 14.6992 3.49478 13.4296 4.40958 12.4815L4.42176 12.4691L6.83525 10.0531C6.83521 10.0532 6.8353 10.0531 6.83525 10.0531C7.34437 9.54336 7.95723 9.14895 8.63208 8.89696Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","type TIconTelegram = {\n  size?: number\n}\n\nexport const IconTelegram = ({ size = 24 }: TIconTelegram) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"5\" y=\"5\" width={size - 10} height={size - 10} fill=\"white\" />\n      <path d=\"M11.9533 2.00003C9.30926 2.01237 6.7777 3.07138 4.91241 4.94541C3.04713 6.81944 1.99997 9.35594 2 12C2 14.6522 3.05357 17.1957 4.92893 19.0711C6.8043 20.9465 9.34784 22.0001 12 22.0001C14.6522 22.0001 17.1957 20.9465 19.0711 19.0711C20.9464 17.1957 22 14.6522 22 12C22 9.34787 20.9464 6.80433 19.0711 4.92896C17.1957 3.0536 14.6522 2.00003 12 2.00003C11.9844 1.99999 11.9689 1.99999 11.9533 2.00003ZM16.0883 8.02003C16.1717 8.01837 16.3558 8.0392 16.4758 8.1367C16.5556 8.20595 16.6064 8.3026 16.6183 8.40754C16.6317 8.48504 16.6483 8.66254 16.635 8.80087C16.485 10.3825 15.8333 14.2192 15.5017 15.99C15.3617 16.74 15.0858 16.9909 14.8183 17.015C14.2383 17.0692 13.7975 16.6317 13.235 16.2634C12.355 15.6859 11.8575 15.3267 11.0033 14.7634C10.0158 14.1134 10.6558 13.755 11.2183 13.1717C11.3658 13.0184 13.9242 10.6909 13.9742 10.48C13.98 10.4534 13.9858 10.355 13.9275 10.3034C13.8692 10.2517 13.7825 10.2692 13.72 10.2834C13.6317 10.3034 12.2258 11.2334 9.5025 13.0709C9.1025 13.3459 8.74167 13.4792 8.4175 13.4709C8.06083 13.4642 7.37417 13.27 6.86333 13.1042C6.23667 12.9 5.73917 12.7925 5.7825 12.4467C5.805 12.2667 6.05333 12.0825 6.52667 11.8942C9.44167 10.6242 11.385 9.7867 12.3583 9.38254C15.135 8.22753 15.7125 8.0267 16.0883 8.02003Z\" fill=\"url(#paint0_linear_268_37256)\" />\n      <defs>\n        <linearGradient id=\"paint0_linear_268_37256\" x1=\"12\" y1=\"2\" x2=\"12\" y2=\"21.8517\" gradientUnits=\"userSpaceOnUse\">\n          <stop stop-color=\"#2AABEE\" />\n          <stop offset=\"1\" stop-color=\"#229ED9\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n","type TIcon = {\n  height?: number,\n  width?: number,\n  color?: string\n}\n\nexport const IconKLGTUApp = ({ color, width, height }: TIcon) => {\n  return (\n    <svg width={width ?? 282} height={height ?? 64} viewBox=\"0 0 282 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M52.1785 30.2639V39.1777C52.1785 43.1271 52.1758 45.9211 51.9954 48.104C51.8178 50.2532 51.4811 51.5628 50.9489 52.5895C49.9135 54.59 48.2882 56.2217 46.2941 57.2608C45.271 57.7948 43.966 58.1327 41.8244 58.311C39.6492 58.492 36.865 58.4947 32.9299 58.4947H24.7343C20.799 58.4947 18.0151 58.492 15.8402 58.311C13.6981 58.1327 12.3936 57.7948 11.3701 57.2608C9.37638 56.2217 7.75075 54.59 6.71506 52.5895C6.1834 51.5628 5.84677 50.2532 5.66881 48.104C5.48826 45.9211 5.48599 43.1271 5.48599 39.1777V30.9536C5.48599 27.0042 5.48826 24.2105 5.66881 22.0279C5.84677 19.8783 6.1834 18.5692 6.71506 17.5421C7.75075 15.5413 9.37638 13.9099 11.3701 12.8706C12.3936 12.337 13.6981 11.9992 15.8402 11.8207C18.0151 11.6394 20.7989 11.6372 24.7343 11.6372H33.6171C33.6963 9.70752 34.0802 7.85667 34.7214 6.13184H24.6124C20.8264 6.13177 17.8147 6.13177 15.3861 6.33416C12.8987 6.54144 10.7783 6.97526 8.84122 7.98502C5.84546 9.54669 3.40289 11.998 1.84672 15.0043C0.840523 16.9481 0.408228 19.0761 0.20168 21.5723C1.20699e-06 24.0095 0 27.0318 0 30.8311V39.3002C0 43.0996 1.20699e-06 46.1221 0.20168 48.5596C0.408228 51.0556 0.840523 53.1834 1.84672 55.1275C3.40289 58.1334 5.84546 60.5847 8.84122 62.1469C10.7783 63.1564 12.8987 63.5899 15.3861 63.7978C17.8147 64.0001 20.8263 64.0001 24.6122 64.0001H33.0519C36.8376 64.0001 39.8494 64.0001 42.2783 63.7978C44.7656 63.5899 46.8859 63.1564 48.8231 62.1469C51.8185 60.5847 54.2611 58.1334 55.8178 55.1275C56.8238 53.1834 57.2558 51.0556 57.4629 48.5596C57.6645 46.1221 57.6645 43.0996 57.6645 39.3009V29.1555C55.9453 29.7992 54.1013 30.1843 52.1785 30.2639Z\" fill={color ?? \"black\"} />\n      <path d=\"M79.3826 54.0001V21.3334H85.5469V36.3964L97.9661 21.3334H105.49L91.8472 37.4399L106.351 54.0001H98.5554L85.5469 39.1186V54.0001H79.3826Z\" fill={color ?? \"black\"} />\n      <path d=\"M109.526 54.0001V21.3334H130.829V27.0955H115.69V54.0001H109.526Z\" fill={color ?? \"black\"} />\n      <path d=\"M144.716 54.0001V27.0955H134.427V21.3334H161.169V27.0955H150.88V54.0001H144.716Z\" fill={color ?? \"black\"} />\n      <path d=\"M168.709 54.0001L173.241 44.8353L162.091 21.3334H169.071L176.46 38.3473L184.12 21.3334H190.692L175.281 54.0001H168.709Z\" fill={color ?? \"black\"} />\n      <path d=\"M232.002 54.0001V29.5001H253.848V54.0001H247.684V35.2621H238.166V54.0001H232.002Z\" fill={color ?? \"black\"} />\n      <path d=\"M260.153 54.0001V29.5001H282V54.0001H275.836V35.2621H266.317V54.0001H260.153Z\" fill={color ?? \"black\"} />\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M208.812 21.3334L198.84 54.0001H205.186L207.252 47.1945H219.541L221.639 54.0001H227.985L218.013 21.3334H208.812ZM217.764 41.4325L213.349 27.1155L209.002 41.4325H217.764Z\" fill={color ?? \"black\"} />\n      <path d=\"M39.0875 12.3871C39.0875 5.54591 44.614 0 51.431 0C58.248 0 63.7745 5.54591 63.7745 12.3871C63.7745 19.2283 58.248 24.7742 51.431 24.7742C44.614 24.7742 39.0875 19.2283 39.0875 12.3871Z\" fill=\"#0193DE\" />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconHidden = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20 9C20.5523 9 21 9.44772 21 10C21 10.5523 20.5523 11 20 11H14C13.4477 11 13 10.5523 13 10V4C13 3.44772 13.4477 3 14 3C14.5523 3 15 3.44772 15 4V7.58579L20.2929 2.29289C20.6834 1.90237 21.3166 1.90237 21.7071 2.29289C22.0976 2.68342 22.0976 3.31658 21.7071 3.70711L16.4142 9H20Z\" fill={color ?? \"black\"} />\n      <path d=\"M2.29289 21.7071C1.90237 21.3166 1.90237 20.6834 2.29289 20.2929L7.58578 15H4C3.44771 15 3 14.5523 3 14C3 13.4477 3.44771 13 4 13H10C10.2652 13 10.5196 13.1054 10.7071 13.2929C10.8946 13.4804 11 13.7348 11 14V20C11 20.5523 10.5523 21 10 21C9.44771 21 9 20.5523 9 20L9 16.4142L3.70711 21.7071C3.31658 22.0976 2.68342 22.0976 2.29289 21.7071Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TBaseIconProps } from \"../types\";\n\nexport const IconCopy = ({ size, color }: TBaseIconProps) => {\n  return (\n    <svg width={size ?? 24} height={size ?? 24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.2423 2H18.1577C18.6295 1.99998 19.0424 1.99996 19.3837 2.02785C19.7457 2.05742 20.1142 2.12329 20.4712 2.30518C20.998 2.57363 21.4264 3.00198 21.6948 3.52883C21.8767 3.88582 21.9426 4.25434 21.9722 4.61633C22 4.95761 22 5.37052 22 5.84237V12.7576C22 13.2295 22 13.6424 21.9722 13.9837C21.9426 14.3457 21.8767 14.7142 21.6948 15.0712C21.4264 15.598 20.998 16.0264 20.4712 16.2948C20.1142 16.4767 19.7457 16.5426 19.3837 16.5722C19.0424 16.6 18.6295 16.6 18.1577 16.6L16.6 16.6L16.6 18.1577C16.6 18.6295 16.6 19.0424 16.5722 19.3837C16.5426 19.7457 16.4767 20.1142 16.2948 20.4712C16.0264 20.998 15.598 21.4264 15.0712 21.6948C14.7142 21.8767 14.3457 21.9426 13.9837 21.9722C13.6424 22 13.2295 22 12.7576 22H5.84237C5.37052 22 4.95761 22 4.61633 21.9722C4.25434 21.9426 3.88582 21.8767 3.52883 21.6948C3.00198 21.4264 2.57363 20.998 2.30518 20.4712C2.12329 20.1142 2.05742 19.7457 2.02785 19.3837C1.99996 19.0424 1.99998 18.6295 2 18.1577V11.2423C1.99998 10.7705 1.99996 10.3576 2.02785 10.0163C2.05742 9.65434 2.12329 9.28582 2.30518 8.92883C2.57363 8.40197 3.00197 7.97363 3.52883 7.70518C3.88582 7.52329 4.25434 7.45742 4.61633 7.42785C4.9576 7.39996 5.3705 7.39998 5.84233 7.4L7.4 7.4L7.4 5.84233C7.39998 5.3705 7.39996 4.9576 7.42785 4.61633C7.45742 4.25434 7.52329 3.88582 7.70518 3.52883C7.97363 3.00197 8.40197 2.57363 8.92883 2.30518C9.28582 2.12329 9.65434 2.05742 10.0163 2.02785C10.3576 1.99996 10.7705 1.99998 11.2423 2ZM5.88 9.4C5.35945 9.4 5.02918 9.40078 4.7792 9.4212C4.54088 9.44068 4.46486 9.4729 4.43681 9.4872C4.28628 9.5639 4.1639 9.68628 4.0872 9.83681C4.0729 9.86486 4.04068 9.94088 4.0212 10.1792C4.00078 10.4292 4 10.7595 4 11.28V18.12C4 18.6405 4.00078 18.9708 4.0212 19.2208C4.04068 19.4591 4.0729 19.5351 4.0872 19.5632C4.16389 19.7137 4.28628 19.8361 4.43681 19.9128C4.46486 19.9271 4.54088 19.9593 4.7792 19.9788C5.02918 19.9992 5.35945 20 5.88 20H12.72C13.2406 20 13.5708 19.9992 13.8208 19.9788C14.0591 19.9593 14.1351 19.9271 14.1632 19.9128C14.3137 19.8361 14.4361 19.7137 14.5128 19.5632C14.5271 19.5351 14.5593 19.4591 14.5788 19.2208C14.5992 18.9708 14.6 18.6405 14.6 18.12V11.28C14.6 10.7595 14.5992 10.4292 14.5788 10.1792C14.5593 9.94088 14.5271 9.86486 14.5128 9.83681C14.4361 9.68628 14.3137 9.5639 14.1632 9.4872C14.1351 9.4729 14.0591 9.44068 13.8208 9.4212C13.5708 9.40078 13.2406 9.4 12.72 9.4H5.88ZM16.6 14.6L16.6 11.2423C16.6 10.7705 16.6 10.3576 16.5722 10.0163C16.5426 9.65434 16.4767 9.28582 16.2948 8.92883C16.0264 8.40197 15.598 7.97363 15.0712 7.70518C14.7142 7.52329 14.3457 7.45742 13.9837 7.42785C13.6424 7.39996 13.2295 7.39998 12.7577 7.4L9.4 7.4V5.88C9.4 5.35945 9.40078 5.02918 9.4212 4.7792C9.44068 4.54088 9.4729 4.46486 9.4872 4.43681C9.5639 4.28628 9.68628 4.1639 9.83681 4.0872C9.86486 4.0729 9.94088 4.04068 10.1792 4.0212C10.4292 4.00078 10.7595 4 11.28 4H18.12C18.6405 4 18.9708 4.00078 19.2208 4.0212C19.4591 4.04068 19.5351 4.0729 19.5632 4.0872C19.7137 4.1639 19.8361 4.28628 19.9128 4.43681C19.9271 4.46486 19.9593 4.54088 19.9788 4.7792C19.9992 5.02918 20 5.35945 20 5.88V12.72C20 13.2406 19.9992 13.5708 19.9788 13.8208C19.9593 14.0591 19.9271 14.1351 19.9128 14.1632C19.8361 14.3137 19.7137 14.4361 19.5632 14.5128C19.5351 14.5271 19.4591 14.5593 19.2208 14.5788C18.9708 14.5992 18.6405 14.6 18.12 14.6H16.6Z\" fill={color ?? \"black\"} />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconExam = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.7485 15.0233C23.9147 14.9922 24.0853 14.9922 24.2515 15.0233C24.4482 15.0602 24.6237 15.1496 24.7086 15.1928L24.7318 15.2045L33.4975 19.5783C33.8055 19.732 34 20.0461 34 20.3897C34 20.7334 33.8055 21.0475 33.4975 21.2012L29.4526 23.2194V23.1063L29.4528 23.0746C29.454 22.9596 29.4563 22.7206 29.378 22.4939C29.312 22.303 29.2044 22.1293 29.0631 21.9853C28.8953 21.8144 28.6807 21.7099 28.577 21.6594L28.5484 21.6454L24.405 19.578C23.9567 19.3543 23.4119 19.5364 23.1882 19.9847C22.9645 20.4331 23.1466 20.9778 23.5949 21.2015L27.6382 23.219V24.1247L24.7318 25.5749L24.7086 25.5867C24.6237 25.6299 24.4482 25.7193 24.2515 25.7561C24.0853 25.7872 23.9147 25.7872 23.7485 25.7561C23.5518 25.7193 23.3763 25.6299 23.2914 25.5867L23.2682 25.5749L14.5025 21.2012C14.1945 21.0475 14 20.7334 14 20.3897C14 20.0461 14.1945 19.732 14.5025 19.5783L23.2682 15.2045L23.2914 15.1928C23.3763 15.1496 23.5518 15.0602 23.7485 15.0233ZM27.6382 25.2714L23.9999 27.0868L17.1338 23.6608C16.852 23.5202 16.5173 23.5352 16.2493 23.7005C15.9813 23.8658 15.8181 24.1578 15.8181 24.4722V27.9256L15.8179 27.9969C15.8169 28.256 15.8156 28.5816 15.9236 28.884C16.0169 29.1451 16.1689 29.3815 16.3679 29.5749C16.5984 29.7988 16.8955 29.9333 17.1319 30.0404L17.1969 30.0699L23.0151 32.7311L23.0617 32.7525L23.0617 32.7525C23.2343 32.832 23.4514 32.9321 23.6889 32.9733C23.8947 33.0089 24.1052 33.0089 24.311 32.9733C24.5485 32.9321 24.9436 32.7487 24.9436 32.7487L30.803 30.0699L30.8679 30.0404C31.1044 29.9333 31.4015 29.7988 31.632 29.5749C31.831 29.3815 31.983 29.1451 32.0763 28.884C32.1842 28.5816 32.183 28.256 32.182 27.9969L32.1818 27.9256V24.4722C32.1818 24.1578 32.0186 23.8658 31.7506 23.7005C31.4826 23.5352 31.1479 23.5202 30.8661 23.6608L29.4526 24.3661V25.833C29.4526 26.3341 29.0464 26.7403 28.5454 26.7403C28.0444 26.7403 27.6382 26.3341 27.6382 25.833V25.2714Z\" fill=\"#9B51E0\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\"\n\nexport const IconOther = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#828282\" />\n      <path d=\"M18.4803 27.2812H20.1313V19.2102H18.4803C16.2208 19.2102 15 20.4258 15 22.6542V23.8387C15 26.0603 16.2208 27.2812 18.4803 27.2812ZM21.3009 27.2895C23.6343 27.5591 26.0433 28.277 28.3658 29.448C28.3613 29.3514 28.3599 29.2466 28.3599 29.15V17.3498C28.3599 17.2427 28.3613 17.1506 28.3643 17.0449C26.0598 18.2092 23.4371 18.9731 21.3009 19.2102V27.2895ZM31.2542 31.4287C32.28 31.4287 33 30.6854 33 29.6465V16.789C33 15.7434 32.28 15 31.2542 15C30.2402 15 29.5135 15.7434 29.5135 16.789V29.6465C29.5135 30.6854 30.2402 31.4287 31.2542 31.4287ZM21.7856 33C22.8336 33 23.615 32.2054 23.3274 30.8991L22.8667 28.7554C22.1384 28.61 21.1184 28.5173 19.0359 28.4682C18.8941 28.4682 18.6672 28.4545 18.4322 28.453L19.8521 31.5215C20.283 32.4525 20.7968 33 21.7856 33Z\" fill=\"white\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconCredit = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.9498 17.85V30C31.9495 30.4104 31.9468 31.0693 31.9228 31.3633C31.8945 31.7098 31.8328 32.0418 31.6719 32.3577C31.4274 32.8375 31.0373 33.2276 30.5575 33.4721C30.2416 33.633 29.9096 33.6947 29.5631 33.723C29.2322 33.75 28.8283 33.75 28.3497 33.75H21.0881C20.359 33.75 19.7663 33.75 19.2854 33.7107C18.7888 33.6701 18.3457 33.584 17.9335 33.374C17.2844 33.0432 16.7566 32.5154 16.4258 31.8663C16.2158 31.4541 16.1297 31.011 16.0891 30.5144C16.0781 30.3799 16.0616 30 16.0616 30C16.0498 29.6268 16.0498 29.1998 16.0498 28.7117V19.2883C16.0498 18.5591 16.0498 17.9665 16.0891 17.4856C16.1297 16.989 16.2158 16.5459 16.4258 16.1337C16.7566 15.4846 17.2844 14.9568 17.9335 14.626C18.3457 14.416 18.7888 14.3299 19.2854 14.2893C19.7663 14.25 20.3589 14.25 21.0881 14.25H28.3497C28.8283 14.25 29.2322 14.25 29.5631 14.277C29.9096 14.3053 30.2416 14.367 30.5575 14.5279C31.0373 14.7724 31.4274 15.1625 31.6719 15.6423C31.8328 15.9582 31.8945 16.2902 31.9228 16.6367C31.9498 16.9676 31.9498 17.3715 31.9498 17.85ZM17.583 30.1848C17.5847 30.1224 17.5863 30.0587 17.5841 30C17.5901 29.019 18.3316 28.35 19.4998 28.35H30.4498V30C30.4498 30.5164 30.4492 30.9786 30.4278 31.2412C30.407 31.4949 30.3706 31.6075 30.3354 31.6767C30.2347 31.8743 30.0741 32.0349 29.8765 32.1356C29.8073 32.1708 29.6947 32.2072 29.441 32.228C29.1784 32.2494 28.8362 32.25 28.3198 32.25H21.1198C20.3514 32.25 19.8201 32.2494 19.4075 32.2157C19.0037 32.1827 18.78 32.1218 18.6145 32.0375C18.2476 31.8505 17.9493 31.5522 17.7623 31.1853C17.6781 31.0199 17.6171 30.7961 17.5841 30.3923C17.5792 30.3323 17.5811 30.2595 17.583 30.1848ZM17.5798 26.4262C17.5798 26.7429 17.8396 27 18.1518 27C18.4623 27 18.7298 26.7429 18.7298 26.4262V17.0661C18.7298 16.7494 18.4623 16.5 18.1518 16.5C17.8396 16.5 17.5798 16.7494 17.5798 17.0661V26.4262ZM28.926 19.15C29.2426 19.15 29.4998 18.8902 29.4998 18.578C29.4998 18.2675 29.2426 18 28.926 18H21.5658C21.2492 18 20.9998 18.2675 20.9998 18.578C20.9998 18.8902 21.2492 19.15 21.5658 19.15H28.926ZM26.4998 21.078C26.4998 21.3902 26.2426 21.65 25.926 21.65H21.5658C21.2492 21.65 20.9998 21.3902 20.9998 21.078C20.9998 20.7675 21.2492 20.5 21.5658 20.5H25.926C26.2426 20.5 26.4998 20.7675 26.4998 21.078Z\" fill=\"#9B51E0\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\"\n\n\nexport const IconUnknow = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#828282\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.2778 18.8235C23.7304 18.7291 23.1675 18.8326 22.6886 19.1156C22.2098 19.3986 21.846 19.8429 21.6617 20.3698C21.3164 21.357 20.2408 21.8757 19.2593 21.5285C18.2778 21.1812 17.762 20.0995 18.1073 19.1123C18.5869 17.7412 19.5335 16.585 20.7795 15.8485C22.0255 15.1121 23.4904 14.8429 24.9148 15.0886C26.3393 15.3343 27.6313 16.0791 28.562 17.1911C29.4925 18.3028 30.0019 19.7097 30 21.1628C29.9991 23.5877 28.2156 25.1465 27.0432 25.9326C26.3995 26.3642 25.7692 26.6798 25.3072 26.8862C25.0736 26.9907 24.8763 27.0702 24.7329 27.1251C24.6611 27.1526 24.5194 27.203 24.476 27.2186L24.4876 27.2147L24.481 27.2169L24.476 27.2186C23.4889 27.5495 22.422 27.013 22.0929 26.0202C21.7642 25.0282 22.2966 23.956 23.2823 23.6243L23.2794 23.6253L23.2967 23.6192C23.3153 23.6125 23.3476 23.6007 23.3916 23.5839C23.4799 23.55 23.6135 23.4964 23.7769 23.4234C24.1092 23.2749 24.5378 23.058 24.9531 22.7795C25.8982 22.1458 26.232 21.5752 26.232 21.1611L26.232 21.1583C26.2329 20.5997 26.0371 20.0588 25.6794 19.6315C25.3218 19.2042 24.8252 18.918 24.2778 18.8235ZM22.0511 31.1053C22.0511 30.0588 22.8946 29.2105 23.9351 29.2105H23.9539C24.9944 29.2105 25.8379 30.0588 25.8379 31.1053C25.8379 32.1517 24.9944 33 23.9539 33H23.9351C22.8946 33 22.0511 32.1517 22.0511 31.1053Z\" fill=\"white\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconWindow = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#2F80ED\" />\n      <path d=\"M18 31.5C15.7909 31.5 14 29.7091 14 27.5C14 25.6358 15.2753 24.0694 17.0011 23.6257C17.0004 23.5839 17 23.542 17 23.5C17 19.634 20.134 16.5 24 16.5C27.6099 16.5 30.5815 19.2325 30.9594 22.7419C32.7284 23.3481 34 25.0255 34 27C34 29.4853 31.9853 31.5 29.5 31.5C25.7609 31.5 22.1876 31.5 18 31.5Z\" fill=\"white\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\"\n\nexport const IconConsult = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path d=\"M26.1591 15.0341C25.7174 14.9446 25.2581 15.033 24.8812 15.2802C24.5967 15.4668 24.4268 15.7283 24.3093 15.9458C24.1969 16.1537 24.0838 16.4178 23.962 16.7021L23.0344 18.8665C23.0136 18.9151 23.0034 18.9387 22.9956 18.9558L22.995 18.957L22.9942 18.9579C22.9812 18.9715 22.963 18.9898 22.9256 19.0272L21.5907 20.362C21.5323 20.4204 21.5034 20.4491 21.4818 20.4693L21.4802 20.4708L21.4782 20.4713C21.4494 20.4781 21.4095 20.4862 21.3285 20.5024L18.1584 21.1364C17.7823 21.2116 17.4442 21.2792 17.1788 21.358C16.9132 21.4369 16.57 21.5667 16.3105 21.8592C15.9786 22.2332 15.827 22.7339 15.8957 23.2292C15.9494 23.6165 16.1629 23.9148 16.3401 24.1278C16.5172 24.3407 16.7611 24.5845 17.0322 24.8556L19.4836 27.3069L15.2505 31.54C14.9165 31.8739 14.9165 32.4154 15.2505 32.7494C15.5845 33.0834 16.126 33.0834 16.4599 32.7494L20.693 28.5163L23.1444 30.9677C23.4155 31.2389 23.6593 31.4827 23.8721 31.6598C24.0851 31.837 24.3834 32.0506 24.7707 32.1042C25.2661 32.1729 25.7667 32.0213 26.1408 31.6894C26.4333 31.4299 26.563 31.0868 26.642 30.8212C26.7208 30.5557 26.7884 30.2176 26.8636 29.8416L27.4976 26.6715C27.5138 26.5905 27.5219 26.5506 27.5287 26.5218L27.5292 26.5197L27.5306 26.5182C27.5508 26.4965 27.5795 26.4677 27.6379 26.4093L28.9728 25.0744C29.0102 25.037 29.0285 25.0188 29.0421 25.0058L29.043 25.0049L29.0441 25.0044C29.0612 24.9966 29.0849 24.9864 29.1335 24.9656L31.2978 24.038C31.5821 23.9162 31.8463 23.803 32.0542 23.6907C32.2717 23.5732 32.5332 23.4033 32.7198 23.1188C32.967 22.7419 33.0554 22.2826 32.9659 21.8409C32.8983 21.5074 32.7186 21.2525 32.5603 21.0626C32.409 20.8812 32.2058 20.678 31.9871 20.4593L27.5407 16.0129C27.322 15.7942 27.1188 15.591 26.9373 15.4397C26.7474 15.2814 26.4926 15.1017 26.1591 15.0341Z\" fill=\"#828282\" />\n    </svg>\n\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconDayOff = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F2994A\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24 16C24.5523 16 25 16.4477 25 17V19C25 19.5523 24.5523 20 24 20C23.4477 20 23 19.5523 23 19V17C23 16.4477 23.4477 16 24 16ZM16.1928 19.1928C16.5833 18.8023 17.2165 18.8023 17.607 19.1928L19.0212 20.607C19.4117 20.9975 19.4117 21.6307 19.0212 22.0212C18.6307 22.4117 17.9975 22.4117 17.607 22.0212L16.1928 20.607C15.8023 20.2165 15.8023 19.5833 16.1928 19.1928ZM31.8069 19.1928C32.1974 19.5833 32.1974 20.2165 31.8069 20.607L30.3927 22.0212C30.0021 22.4117 29.369 22.4117 28.9784 22.0212C28.5879 21.6307 28.5879 20.9975 28.9784 20.607L30.3927 19.1928C30.7832 18.8023 31.4163 18.8023 31.8069 19.1928ZM13 27C13 26.4477 13.4477 26 14 26H16C16.5523 26 17 26.4477 17 27C17 27.5523 16.5523 28 16 28H14C13.4477 28 13 27.5523 13 27ZM31 27C31 26.4477 31.4477 26 32 26H34C34.5523 26 35 26.4477 35 27C35 27.5523 34.5523 28 34 28H32C31.4477 28 31 27.5523 31 27Z\" fill=\"white\" />\n      <path d=\"M24 22.1667C21.2386 22.1667 19 24.4052 19 27.1667C19 27.6269 19.3731 28 19.8333 28H28.1667C28.6269 28 29 27.6269 29 27.1667C29 24.4052 26.7614 22.1667 24 22.1667Z\" fill=\"white\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13 31C13 30.4477 13.4477 30 14 30H34C34.5523 30 35 30.4477 35 31C35 31.5523 34.5523 32 34 32H14C13.4477 32 13 31.5523 13 31Z\" fill=\"white\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconHoliday = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#EB5757\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.733 19.0954C17.5514 18.7142 17.4545 18.2939 17.4545 17.8636C17.4545 17.1042 17.7563 16.3758 18.2933 15.8387C18.8303 15.3017 19.5587 15 20.3182 15C22.205 15 23.3395 16.3595 23.9499 17.4693C23.9669 17.5003 23.9836 17.5312 24 17.5621C24.0164 17.5312 24.0331 17.5003 24.0501 17.4693C24.6605 16.3595 25.795 15 27.6818 15C28.4413 15 29.1697 15.3017 29.7067 15.8387C30.2438 16.3758 30.5455 17.1042 30.5455 17.8636C30.5455 18.2939 30.4486 18.7142 30.267 19.0954C30.4252 19.0988 30.5713 19.105 30.705 19.1159C31.0285 19.1424 31.3502 19.2007 31.6598 19.3584C32.1216 19.5938 32.4971 19.9693 32.7325 20.4311C32.8902 20.7407 32.9486 21.0624 32.975 21.3859C33 21.6924 33 22.0644 33 22.4957V24.8182H24.8184V19.0909H27.6818C28.0073 19.0909 28.3195 18.9616 28.5496 18.7314C28.7798 18.5013 28.9091 18.1891 28.9091 17.8636C28.9091 17.5381 28.7798 17.226 28.5496 16.9958C28.3195 16.7657 28.0073 16.6364 27.6818 16.6364C26.705 16.6364 25.6623 17.3223 25.1477 18.2579C25.0377 18.4579 24.9688 18.6594 24.9028 18.8523C24.875 18.9336 24.848 19.0134 24.8184 19.0909L23.182 19.0909V24.8182H15.0001V26.4545H23.182V33H24.8184V26.4545H33V29.5952C33 30.0265 33 30.3986 32.975 30.705C32.9486 31.0285 32.8902 31.3502 32.7325 31.6598C32.4971 32.1216 32.1216 32.4971 31.6598 32.7325C31.3502 32.8902 31.0285 32.9486 30.705 32.975C30.3986 33 30.0265 33 29.5952 33H24L23.9988 33H18.4048C17.9735 33 17.6014 33 17.295 32.975C16.9715 32.9486 16.6498 32.8902 16.3402 32.7325C15.8784 32.4971 15.5029 32.1216 15.2675 31.6598C15.1098 31.3502 15.0514 31.0285 15.025 30.705C15 30.3986 15 30.0265 15 29.5952V22.4957C15 22.0644 15 21.6923 15.025 21.3859C15.0514 21.0624 15.1098 20.7407 15.2675 20.4311C15.5029 19.9693 15.8784 19.5938 16.3402 19.3584C16.6498 19.2007 16.9715 19.1423 17.295 19.1159C17.4287 19.105 17.5749 19.0988 17.733 19.0954ZM20.3182 16.6364C19.9927 16.6364 19.6805 16.7657 19.4504 16.9958C19.2202 17.226 19.0909 17.5381 19.0909 17.8636C19.0909 18.1891 19.2202 18.5013 19.4504 18.7314C19.6805 18.9616 19.9927 19.0909 20.3182 19.0909L23.182 19.0909C23.1517 19.0115 23.1237 18.9298 23.0955 18.8465C23.0309 18.6554 22.9633 18.4559 22.8545 18.2579C22.3398 17.3223 21.295 16.6364 20.3182 16.6364Z\" fill=\"white\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconLecture = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path d=\"M32.2216 14.7275C31.9276 14.4279 31.4467 14.4237 31.1475 14.718C30.8483 15.0124 30.8441 15.494 31.1381 15.7936C33.5953 18.298 33.5953 22.3639 31.1381 24.8684C30.8441 25.168 30.8483 25.6495 31.1475 25.9439C31.4467 26.2383 31.9276 26.2341 32.2216 25.9345C35.2595 22.8382 35.2595 17.8237 32.2216 14.7275Z\" fill=\"#F2994A\" />\n      <path d=\"M30.2316 16.7557C29.9376 16.456 29.4568 16.4518 29.1576 16.7462C28.8584 17.0406 28.8541 17.5221 29.1481 17.8217C30.5063 19.206 30.5063 21.4559 29.1481 22.8402C28.8541 23.1398 28.8584 23.6213 29.1576 23.9157C29.4568 24.2101 29.9376 24.2059 30.2316 23.9062C32.1705 21.9302 32.1705 18.7317 30.2316 16.7557Z\" fill=\"#F2994A\" />\n      <path d=\"M22.0949 24.9068C24.4544 24.9068 26.3671 22.9745 26.3671 20.5907C26.3671 18.207 24.4544 16.2746 22.0949 16.2746C19.7355 16.2746 17.8228 18.207 17.8228 20.5907C17.8228 22.9745 19.7355 24.9068 22.0949 24.9068Z\" fill=\"#F2994A\" />\n      <path d=\"M19.7215 26.1857C18.3966 26.1857 17.7342 26.1857 17.1951 26.3509C15.9814 26.7229 15.0317 27.6824 14.6635 28.9085C14.5 29.4531 14.5 31.1615 14.5 32.5H29.6899C29.6899 31.1615 29.6899 29.4531 29.5264 28.9085C29.1582 27.6824 28.2084 26.7229 26.9948 26.3509C26.4557 26.1857 25.7933 26.1857 24.4684 26.1857H19.7215Z\" fill=\"#F2994A\" />\n    </svg>\n\n  );\n};\n","import { TTimetableIconProps } from \"../types\"\n\nexport const IconDistance = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.2352 15H28.7648C29.4966 15 30.1006 15 30.5926 15.0398C31.1036 15.0811 31.5733 15.1698 32.0145 15.3924C32.6987 15.7375 33.255 16.2883 33.6037 16.9656C33.8285 17.4024 33.9181 17.8675 33.9598 18.3734C34 18.8604 34 19.4583 34 20.1828V24.2172C34 24.9417 34 25.5396 33.9598 26.0266C33.9181 26.5325 33.8285 26.9976 33.6037 27.4344C33.255 28.1118 32.6987 28.6625 32.0145 29.0076C31.5733 29.2302 31.1036 29.3189 30.5926 29.3602C30.1006 29.4 29.4966 29.4 28.7648 29.4H24.9091V31.2H27.6364C28.1384 31.2 28.5455 31.6029 28.5455 32.1C28.5455 32.5971 28.1384 33 27.6364 33H20.3636C19.8616 33 19.4545 32.5971 19.4545 32.1C19.4545 31.6029 19.8616 31.2 20.3636 31.2H23.0909V29.4H19.2352C18.5034 29.4 17.8994 29.4 17.4074 29.3602C16.8964 29.3189 16.4267 29.2302 15.9855 29.0076C15.3013 28.6625 14.745 28.1118 14.3963 27.4344C14.1715 26.9976 14.0819 26.5325 14.0402 26.0266C14 25.5396 14 24.9417 14 24.2172V20.1828C14 19.4584 14 18.8604 14.0402 18.3734C14.0819 17.8675 14.1715 17.4024 14.3963 16.9656C14.745 16.2883 15.3013 15.7375 15.9855 15.3924C16.4267 15.1698 16.8964 15.0811 17.4074 15.0398C17.8994 15 18.5034 15 19.2352 15ZM19.6809 21.0739C20.8301 20.1032 22.3407 19.5123 24 19.5123C25.6593 19.5123 27.1699 20.1032 28.3191 21.0739C28.6083 21.3182 29.0428 21.2842 29.2897 20.9981C29.5366 20.712 29.5023 20.282 29.2131 20.0378C27.8204 18.8615 25.9945 18.15 24 18.15C22.0055 18.15 20.1796 18.8615 18.7869 20.0378C18.4978 20.282 18.4634 20.712 18.7103 20.9981C18.9572 21.2842 19.3917 21.3182 19.6809 21.0739ZM21.9661 23.3381C22.5213 22.9124 23.2272 22.6562 23.9999 22.6562C24.7611 22.6562 25.4576 22.9049 26.0088 23.3192C26.3116 23.5467 26.7435 23.4883 26.9734 23.1888C27.2034 22.8892 27.1444 22.4619 26.8417 22.2343C26.0563 21.6441 25.0687 21.2938 23.9999 21.2938C22.915 21.2938 21.9137 21.6548 21.1227 22.2613C20.8222 22.4917 20.7674 22.9196 21.0003 23.2169C21.2332 23.5143 21.6656 23.5685 21.9661 23.3381ZM24 24.4377C23.6198 24.4377 23.3116 24.7426 23.3116 25.1188C23.3116 25.495 23.6198 25.8 24 25.8H24.0066C24.3868 25.8 24.695 25.495 24.695 25.1188C24.695 24.7426 24.3868 24.4377 24.0066 24.4377H24Z\" fill=\"#27AE60\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconWorkshop = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path d=\"M17.2613 27.1817C17.1783 27.3363 17.1148 27.5016 16.9876 27.8321L15 33L20.1679 31.0124C20.4984 30.8852 20.6637 30.8217 20.8183 30.7387C20.9557 30.6649 21.0866 30.5798 21.2097 30.4843C21.3484 30.3767 21.4736 30.2515 21.724 30.0011L30.2251 21.5L26.5 17.7749L17.999 26.276C17.7485 26.5264 17.6233 26.6516 17.5157 26.7902C17.4202 26.9134 17.3351 27.0443 17.2613 27.1817Z\" fill=\"#2F80ED\" />\n      <path d=\"M27.6408 16.6342L31.3658 20.3592L32.2285 19.4966C33.2572 18.4679 33.2572 16.8001 32.2285 15.7715C31.1999 14.7428 29.5321 14.7428 28.5034 15.7715L27.6408 16.6342Z\" fill=\"#2F80ED\" />\n    </svg>\n  );\n};\n","import { TTimetableIconProps } from \"../types\"\n\nexport const IconToNPair = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#27AE60\" />\n      <path d=\"M18.2792 16.5364C18.6342 16.1849 18.6342 15.6151 18.2792 15.2636C17.9242 14.9121 17.3486 14.9121 16.9935 15.2636L14.2663 17.9636C13.9112 18.3151 13.9112 18.8849 14.2663 19.2364C14.6213 19.5879 15.1969 19.5879 15.5519 19.2364L18.2792 16.5364Z\" fill=\"white\" />\n      <path d=\"M31.0065 15.2636C30.6514 14.9121 30.0758 14.9121 29.7208 15.2636C29.3658 15.6151 29.3658 16.1849 29.7208 16.5364L32.4481 19.2364C32.8031 19.5879 33.3787 19.5879 33.7337 19.2364C34.0888 18.8849 34.0888 18.3151 33.7337 17.9636L31.0065 15.2636Z\" fill=\"white\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.2146 19.1724C19.749 17.6534 21.83 16.8 24 16.8C26.17 16.8 28.251 17.6534 29.7854 19.1724C31.3198 20.6915 32.1818 22.7517 32.1818 24.9C32.1818 26.7461 31.5452 28.5272 30.3924 29.9557L31.9156 31.4636C32.2706 31.8151 32.2706 32.3849 31.9156 32.7364C31.5605 33.0879 30.9849 33.0879 30.6299 32.7364L29.1068 31.2285C27.6638 32.3698 25.8647 33 24 33C22.1353 33 20.3362 32.3698 18.8932 31.2285L17.3701 32.7364C17.0151 33.0879 16.4395 33.0879 16.0844 32.7364C15.7294 32.3849 15.7294 31.8151 16.0844 31.4636L17.6076 29.9557C16.4548 28.5272 15.8182 26.7461 15.8182 24.9C15.8182 22.7517 16.6802 20.6915 18.2146 19.1724ZM24.9091 21.3C24.9091 20.8029 24.5021 20.4 24 20.4C23.4979 20.4 23.0909 20.8029 23.0909 21.3V24.9C23.0909 25.1387 23.1867 25.3676 23.3572 25.5364L25.1754 27.3364C25.5304 27.6879 26.106 27.6879 26.461 27.3364C26.816 26.9849 26.816 26.4151 26.461 26.0636L24.9091 24.5272V21.3Z\" fill=\"white\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconLaboratory = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.2032 14.068C28.4823 13.9773 28.783 13.9773 29.0622 14.068C29.2777 14.1381 29.4339 14.2544 29.5368 14.3417C29.6256 14.4171 29.7187 14.5103 29.7967 14.5884L33.4116 18.2032C33.4896 18.2812 33.5829 18.3744 33.6583 18.4632C33.7456 18.5661 33.8619 18.7223 33.932 18.9378C34.0227 19.217 34.0227 19.5177 33.932 19.7968C33.8619 20.0123 33.7456 20.1686 33.6583 20.2715C33.5829 20.3603 33.4896 20.4534 33.4116 20.5314L20.5315 33.4115C20.4535 33.4896 20.3603 33.5829 20.2715 33.6583C20.1686 33.7456 20.0123 33.8619 19.7968 33.932C19.5177 34.0227 19.217 34.0227 18.9378 33.932C18.7223 33.8619 18.5661 33.7456 18.4632 33.6583C18.3744 33.5829 18.2812 33.4897 18.2032 33.4116L14.5884 29.7968C14.5104 29.7188 14.4171 29.6256 14.3417 29.5368C14.2544 29.4339 14.1381 29.2777 14.068 29.0622C13.9773 28.783 13.9773 28.4823 14.068 28.2032C14.1381 27.9877 14.2544 27.8314 14.3417 27.7285C14.4171 27.6397 14.5104 27.5466 14.5884 27.4686L27.4686 14.5884C27.5466 14.5104 27.6397 14.4171 27.7285 14.3417C27.8314 14.2544 27.9877 14.1381 28.2032 14.068ZM27.3693 17.8511C27.0437 17.5254 26.5157 17.5254 26.19 17.8511C25.8644 18.1768 25.8644 18.7047 26.19 19.0304L27.5798 20.4202C27.9055 20.7458 28.4335 20.7458 28.7591 20.4202C29.0848 20.0945 29.0848 19.5666 28.7591 19.2409L27.3693 17.8511ZM24.5897 20.6307C24.2641 20.3051 23.7361 20.3051 23.4104 20.6307C23.0848 20.9564 23.0848 21.4843 23.4104 21.81L24.8002 23.1998C25.1259 23.5254 25.6539 23.5254 25.9795 23.1998C26.3052 22.8741 26.3052 22.3462 25.9795 22.0205L24.5897 20.6307ZM21.8101 23.4103C21.4845 23.0847 20.9565 23.0847 20.6308 23.4103C20.3052 23.736 20.3052 24.264 20.6308 24.5896L22.0206 25.9794C22.3463 26.3051 22.8743 26.3051 23.1999 25.9794C23.5256 25.6538 23.5256 25.1258 23.1999 24.8001L21.8101 23.4103ZM19.0305 26.1899C18.7048 25.8643 18.1769 25.8643 17.8512 26.1899C17.5256 26.5156 17.5256 27.0436 17.8512 27.3692L19.241 28.759C19.5667 29.0847 20.0947 29.0847 20.4203 28.759C20.746 28.4334 20.746 27.9054 20.4203 27.5797L19.0305 26.1899Z\" fill=\"#EB5757\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\"\n\nexport const IconDiffCredit = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.9498 30V17.8501C31.9498 17.3715 31.9498 16.9676 31.9228 16.6367C31.8945 16.2902 31.8328 15.9582 31.6719 15.6423C31.4274 15.1625 31.0373 14.7724 30.5575 14.5279C30.2416 14.367 29.9096 14.3053 29.5631 14.277C29.2322 14.25 28.8283 14.25 28.3497 14.25H21.0881C20.3589 14.25 19.7663 14.25 19.2854 14.2893C18.7888 14.3299 18.3457 14.416 17.9335 14.626C17.2844 14.9568 16.7566 15.4846 16.4258 16.1337C16.2158 16.5459 16.1297 16.989 16.0891 17.4856C16.0498 17.9665 16.0498 18.5591 16.0498 19.2883V28.7117C16.0498 29.1998 16.0498 29.6268 16.0616 30C16.0616 30 16.0781 30.3799 16.0891 30.5144C16.1297 31.011 16.2158 31.4541 16.4258 31.8663C16.7566 32.5154 17.2844 33.0432 17.9335 33.374C18.3457 33.584 18.7888 33.6701 19.2854 33.7107C19.7663 33.75 20.359 33.75 21.0881 33.75H28.3497C28.8283 33.75 29.2322 33.75 29.5631 33.723C29.9096 33.6947 30.2416 33.633 30.5575 33.4721C31.0373 33.2276 31.4274 32.8375 31.6719 32.3577C31.8328 32.0418 31.8945 31.7098 31.9228 31.3633C31.9468 31.0693 31.9495 30.4104 31.9498 30ZM17.5841 30C17.5863 30.0587 17.5847 30.1224 17.583 30.1848C17.5811 30.2595 17.5792 30.3323 17.5841 30.3923C17.6171 30.7961 17.6781 31.0199 17.7623 31.1853C17.9493 31.5522 18.2476 31.8505 18.6145 32.0375C18.78 32.1218 19.0037 32.1827 19.4075 32.2157C19.8201 32.2494 20.3514 32.25 21.1198 32.25H28.3198C28.8362 32.25 29.1784 32.2494 29.441 32.228C29.6947 32.2072 29.8073 32.1708 29.8765 32.1356C30.0741 32.0349 30.2347 31.8743 30.3354 31.6767C30.3706 31.6075 30.407 31.4949 30.4278 31.2412C30.4492 30.9786 30.4498 30.5164 30.4498 30V28.35H19.4998C18.3316 28.35 17.5901 29.019 17.5841 30ZM17.5798 26.4262C17.5798 26.7429 17.8396 27 18.1518 27C18.4623 27 18.7298 26.7429 18.7298 26.4262V17.0661C18.7298 16.7494 18.4623 16.5 18.1518 16.5C17.8396 16.5 17.5798 16.7494 17.5798 17.0661V26.4262ZM22.6093 23.7493C22.9474 24.4959 23.8617 25 24.9188 25C26.4426 25 27.4998 24.0156 27.4998 22.5795C27.4998 21.267 26.5617 20.3397 25.2474 20.3397C24.5569 20.3397 23.9902 20.606 23.6998 21.034H23.6759L23.8569 19.0034H26.6331C26.9474 19.0034 27.1521 18.8037 27.1521 18.4993C27.1521 18.1997 26.9474 18 26.6331 18H23.6712C23.1331 18 22.8569 18.2188 22.814 18.7609L22.595 21.3526C22.5902 21.3811 22.5902 21.4001 22.5902 21.4287C22.5807 21.7615 22.7759 22.0421 23.1712 22.0421C23.4521 22.0421 23.5712 21.9803 23.8569 21.695C24.1188 21.4382 24.495 21.2622 24.9283 21.2622C25.7379 21.2622 26.314 21.8234 26.314 22.6128C26.314 23.426 25.7379 24.0014 24.9236 24.0014C24.2617 24.0014 23.8045 23.6732 23.5712 23.1168C23.4426 22.8648 23.2855 22.7649 23.0283 22.7649C22.7045 22.7649 22.4998 22.9647 22.4998 23.2833C22.4998 23.4592 22.5426 23.6019 22.6093 23.7493Z\" fill=\"#9B51E0\" />\n    </svg>\n  )\n}\n","import { TTimetableIconProps } from \"../types\";\n\nexport const IconWorkshopPe = ({ size = 48 }: TTimetableIconProps) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width={size} height={size} rx=\"24\" fill=\"#F0F2F5\" />\n      <path d=\"M14.2724 28.5339C14.9962 28.5339 15.5517 27.9677 15.5517 28.2469V20.7531C15.5517 20.0223 14.9962 19.4507 14.2724 19.4507C13.557 19.4507 13 20.0223 13 20.7531V27.2469C13 27.9677 13.557 28.5339 14.2724 28.5339ZM18.446 30.5C19.6407 30.5 20.4642 29.6685 20.4642 28.4948V19.5137C20.4642 18.333 19.6407 17.5 18.446 17.5C17.2566 17.5 16.4347 18.333 16.4347 19.5137V28.4948C16.4347 29.6685 17.2566 30.5 18.446 30.5ZM21.4099 25.7594H26.6529V22.2406H21.4099V25.7594ZM29.6154 30.5C30.813 30.5 31.635 29.6685 31.635 28.4948V19.5137C31.635 18.333 30.813 17.5 29.6154 17.5C28.4275 17.5 27.6055 18.333 27.6055 19.5137V28.4948C27.6055 29.6685 28.4275 30.5 29.6154 30.5ZM33.7193 28.5339C34.4362 28.5339 35 27.9677 35 27.2469V20.7531C35 20.0223 34.4362 19.4507 33.7193 19.4507C33.0038 19.4507 32.4483 20.0223 32.4483 20.7531V27.2469C32.4483 27.9677 33.0038 28.5339 33.7193 28.5339Z\" fill=\"#2F80ED\" />\n    </svg>\n  );\n};\n"],"names":["IconSun","size","color","jsx","IconEye","IconHome","IconMoon","IconPlus","IconType","IconCheck","IconSearch","IconChevron","direction","IconXClose","IconHomeAlt","IconStraightArrow","IconSlantedArrow","IconCalendar","IconExpand","IconInfoCircle","IconGlobe","IconStarAlt","IconLink","IconTelegram","jsxs","IconKLGTUApp","width","height","IconHidden","IconCopy","IconExam","IconOther","IconCredit","IconUnknow","IconWindow","IconConsult","IconDayOff","IconHoliday","IconLecture","IconDistance","IconWorkshop","IconToNPair","IconLaboratory","IconDiffCredit","IconWorkshopPe"],"mappings":"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"}