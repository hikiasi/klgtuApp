{"version":3,"file":"list-item-a334a94a.js","sources":["../../src/shared/ui/core/molecules/list-item/list-item.tsx"],"sourcesContent":["import styled, { useTheme } from \"styled-components\";\nimport { IconCheck, IconsList, TIconsList, Typography } from \"../../atoms\";\nimport { forwardRef } from \"react\";\n\nexport type TListItem = {\n  onClick?: () => void,\n  text: string,\n  icon?: TIconsList,\n  showIcon?: boolean,\n  isPicked?: boolean,\n  type?: 'default' | 'small'\n}\n\nexport const ListItem = forwardRef<HTMLDivElement, TListItem>(({\n  text,\n  onClick,\n  isPicked = false,\n  type = 'default',\n  showIcon = false,\n  icon,\n  ...props\n}, ref) => {\n  const { palette } = useTheme()\n  return (\n    <Wrapper onClick={onClick} type={type} ref={ref} {...props}>\n      <Typography\n        variant={type === 'default' ? 'callout' : 'footnote'}\n        type=\"light\"\n      >\n        {text}\n      </Typography>\n      {isPicked &&\n        <IconCheck\n          color={palette.accent.primary_550}\n          size={type === 'default' ? 22 : 16}\n        />\n      }\n      {!isPicked && showIcon && icon &&\n        <IconWrapper>\n          {IconsList[icon]}\n        </IconWrapper>\n      }\n    </Wrapper>\n  );\n});\n\ntype TWrapper = Required<Pick<TListItem, 'type'>>\n\nconst Wrapper = styled.div<TWrapper>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${({ type }) => type === 'default' ? `9px 24px 9px 16px` : `12px 11px`};\n  border-bottom: 1px solid ${({ theme: { palette } }) => palette.content.cnt_200};\n  cursor: pointer;\n  background: ${({ theme: { palette } }) => palette.background.bg_000};\n  &:hover, &:active {\n    border-color: ${({ theme: { palette } }) => palette.accent.primary_500_op12};\n    background: ${({ theme: { palette } }) => palette.accent.primary_500_op12};\n  };\n`\nconst IconWrapper = styled.div`\n  & svg {\n    width: 22px;\n    height: 22px;\n  }\n  & svg path {\n    fill: ${({ theme: { palette } }) => palette.content.cnt_100};\n  }\n`\n"],"names":["ListItem","forwardRef","text","onClick","isPicked","type","showIcon","icon","props","ref","palette","useTheme","jsxs","Wrapper","jsx","Typography","IconCheck","IconWrapper","IconsList","styled"],"mappings":"2XAaO,MAAAA,EAAAC,EAAA,WAAA,CAAA,CAAwD,KAAAC,EAC7D,QAAAC,EACA,SAAAC,EAAA,GACW,KAAAC,EAAA,UACJ,SAAAC,EAAA,GACI,KAAAC,EACX,GAAAC,CAEF,EAAAC,IAAA,CACE,KAAA,CAAA,QAAAC,GAAAC,IACA,OAAAC,EAAA,KAAAC,EAAA,CAAA,QAAAV,EAAA,KAAAE,EAAA,IAAAI,EAAA,GAAAD,EAAA,SAAA,CAEIM,EAAA,IAAAC,EAAC,CAAA,QAAAV,IAAA,UAAA,UAAA,WAC2C,KAAA,QACrC,SAAAH,CAEJ,CAAA,EACHE,GAAAU,EAAA,IAEEE,EAAC,CAAA,MAAAN,EAAA,OAAA,YACuB,KAAAL,IAAA,UAAA,GAAA,EACU,CAAA,EAClC,CAAAD,GAAAE,GAAAC,GAAAO,EAAA,IAAAG,EAAA,CAAA,SAAAC,EAAAX,CAAA,EAAA,CAKA,CAAA,CAAA,CAIR,CAAA,EAIAM,EAAAM,EAAA;AAAA;AAAA;AAAA;AAAA,aAAuB,CAAA,CAAA,KAAAd,CAAA,IAAAA,IAAA,UAAA,oBAAA;AAAA,6BAI+C,CAAA,CAAA,MAAA,CAAA,QAAAK,CAAA,CAAA,IAAAA,EAAA,QAAA;AAAA;AAAA,gBACG,CAAA,CAAA,MAAA,CAAA,QAAAA,CAAA,CAAA,IAAAA,EAAA,WAAA;AAAA;AAAA,oBAEV,CAAA,CAAA,MAAA,CAAA,QAAAA,CAAA,CAAA,IAAAA,EAAA,OAAA;AAAA,kBAEA,CAAA,CAAA,MAAA,CAAA,QAAAA,CAAA,CAAA,IAAAA,EAAA,OAAA;AAAA;AAAA,EAI/DO,EAAAE,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2B,CAAA,CAAA,MAAA,CAAA,QAAAT,CAAA,CAAA,IAAAA,EAAA,QAAA;AAAA;AAAA"}