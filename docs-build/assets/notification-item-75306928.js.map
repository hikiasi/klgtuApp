{"version":3,"file":"notification-item-75306928.js","sources":["../../src/shared/ui/core/molecules/notification-item/notification-item.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { IconInfoCircle, Typography } from \"../../atoms\";\nimport { IconButton } from \"../icon-button\";\nimport { keyframes } from \"styled-components\";\nimport { forwardRef } from \"react\";\n\nexport type TNotificationItem = {\n  isPicked?: boolean,\n  autoCloseTime?: number,\n  text: string,\n  onClose: () => void\n}\n\nexport const NotificationItem = forwardRef<HTMLDivElement, TNotificationItem>(({\n  text,\n  isPicked,\n  onClose,\n  autoCloseTime = 10,\n  ...props\n}, ref) => {\n  return (\n    <Wrapper ref={ref} {...props}>\n      {isPicked &&\n        <Redline timer={autoCloseTime} />\n      }\n      <IconInfoCircle\n      />\n      <Typography>\n        {text}\n      </Typography>\n      <XCloseWrapper>\n        <IconButton\n          icon='xClose'\n          variant=\"transparent\"\n          onClick={onClose}\n        />\n      </XCloseWrapper>\n    </Wrapper>\n  );\n});\n\n\nconst Wrapper = styled.div`\n  position: relative;\n  padding: 24px;\n  background: ${({ theme: { palette } }) => palette.background.bg_000};\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  border-radius: 20px;\n  box-shadow: 0px 5px 16px 0px rgba(0,0,0, .1);\n`\nconst XCloseWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`\n\ntype TRedline = {\n  timer: number\n}\nconst vanishing = keyframes`\n  from {\n    width: calc(100% - 48px)\n  }\n  to {\n    width: 0;\n  }\n`\nconst Redline = styled.div<TRedline>`\n  margin-right: auto;\n  position: absolute;\n  top: 0;\n  left: 24px;\n  height: 4px;\n  background: ${({ theme: { palette } }) => palette.system.error_500};\n  border-radius: 0px 0px 2px 2px;\n  animation: ${vanishing} ${({ timer }) => `${timer}s`} linear;\n`\n\n"],"names":["NotificationItem","forwardRef","text","isPicked","onClose","autoCloseTime","props","ref","jsxs","Wrapper","jsx","Redline","IconInfoCircle","Typography","XCloseWrapper","IconButton","styled","palette","vanishing","keyframes","timer"],"mappings":"6XAaO,MAAAA,EAAAC,EAAA,WAAA,CAAA,CAAwE,KAAAC,EAC7E,SAAAC,EACA,QAAAC,EACA,cAAAC,EAAA,GACgB,GAAAC,CAElB,EAAAC,IACEC,EAAAA,KAAAC,EAAA,CAAA,IAAAF,EAAA,GAAAD,EAAA,SAAA,CAEKH,GAAAO,EAAAA,IAAAC,EAAA,CAAA,MAAAN,CAAA,CAAA,EACgCK,EAAA,IAEjCE,EAAC,CAAA,CAAA,EACDF,EAAAA,IAAAG,EAAA,CAAA,SAAAX,CAAA,CAAA,EAGAQ,MAAAI,EAAA,CAAA,SAAAJ,EAAA,IAEEK,EAAC,CAAA,KAAA,SACM,QAAA,cACG,QAAAX,CACC,CAAA,EAAA,CAEb,CAAA,CAAA,CAGN,EAGAK,EAAAO,EAAA;AAAA;AAAA;AAAA,gBAAuB,CAAA,CAAA,MAAA,CAAA,QAAAC,CAAA,CAAA,IAAAA,EAAA,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUvBH,EAAAE,EAAA;AAAA;AAAA;AAAA,EAQAE,EAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQAR,EAAAK,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAuB,CAAA,CAAA,MAAA,CAAA,QAAAC,CAAA,CAAA,IAAAA,EAAA,OAAA;AAAA;AAAA,eAMoCC,KAAA,CAAA,CAAA,MAAAE,CAAA,IAAA,GAAAA;AAAA"}