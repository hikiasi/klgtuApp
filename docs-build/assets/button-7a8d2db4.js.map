{"version":3,"file":"button-7a8d2db4.js","sources":["../../src/shared/ui/core/molecules/button/button.tsx"],"sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\nimport { Typography, TIconsList, IconsList } from \"../../atoms\";\nimport { TypographyVariants } from \"@shared/ui/theme\";\nimport { forwardRef } from \"react\";\n\nexport type TButton = {\n  text: string,\n  onClick?: () => void,\n  size?: 'large' | 'medium' | 'small',\n  variant?: 'filled' | 'outlined' | 'text',\n  isDisable?: boolean,\n  icon?: TIconsList,\n}\n\nexport const Button = forwardRef<HTMLButtonElement, TButton>(({\n  text,\n  isDisable = false,\n  variant = 'filled',\n  size = 'medium',\n  icon,\n  onClick,\n  ...props\n}, ref) => {\n  const textSize: Record<typeof size, TypographyVariants> = {\n    large: 'subheadline',\n    medium: 'footnote',\n    small: 'caption2',\n  }\n  return (\n    <ButtonWrapper\n      onClick={onClick}\n      isDisable={isDisable}\n      variant={variant}\n      disabled={isDisable}\n      size={size}\n      ref={ref}\n      {...props}\n    >\n      {icon && IconsList[icon]}\n      <Typography\n        type='medium'\n        variant={textSize[size]}\n      >\n        {text}\n      </Typography>\n    </ButtonWrapper>\n  );\n});\n\ntype TButtonWrapper = Required<Pick<TButton, 'isDisable' | 'variant' | 'size'>>\n\nconst ButtonWrapper = styled.button<TButtonWrapper>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: ${({ size }) => {\n    switch (size) {\n      case 'small':\n        return '6px 10px'\n      case 'medium':\n        return '9px 14px'\n      case 'large':\n        return '10px 16px'\n    }\n  }};\n  border-radius: 6px;\n  background: ${({ theme: { palette }, isDisable, variant }): string => {\n    let color = isDisable ? palette.background.bg_150 : palette.accent.primary_500\n    if (variant === 'outlined' || variant === 'text') {\n      color = 'transparent'\n    }\n    return color\n  }};\n  border: ${({ theme: { palette }, variant, isDisable }) => variant === 'outlined' ?\n    isDisable ? `1px solid ${palette.background.bg_150}` : `1px solid ${palette.accent.primary_500}`\n    :\n    'none'\n  };\n  cursor: pointer;\n  &:active {\n    box-shadow: ${({ theme: { palette }, isDisable, variant }) => !isDisable && variant !== 'text' && `0px 0px 0px 2px ${palette.accent.primary_500_op12}`};\n  };\n  &:hover {\n    background: ${({ theme: { palette }, isDisable, variant }) => {\n    if (variant === 'filled' && !isDisable) {\n      return palette.accent.primary_550\n    }\n    return ''\n  }};\n  };\n  & ${Typography} {\n  color: ${({ theme, isDisable, variant }) => setColor(theme, { isDisable, variant })};\n  };\n  &:hover ${Typography} {\n    color: ${({ theme: { palette }, isDisable, variant }) => {\n    let cl = palette.accent.primary_550\n    if (variant === 'filled') {\n      cl = palette.content.cnt_const_white\n    }\n    if (isDisable) {\n      cl = palette.content.cnt_050\n    }\n    return cl\n  }};\n  };\n  &:active ${Typography}{\n    color: ${({ theme, isDisable, variant }) => setColor(theme, { isDisable, variant })}\n  };\n  & svg {\n    width: ${({ size }) => pxBySize({ size })};\n    height: ${({ size }) => pxBySize({ size })};\n  }\n  & svg path {\n    fill: ${({ theme, isDisable, variant }) => setColor(theme, { isDisable, variant })}\n  };\n  &:hover svg path {\n    fill: ${({ theme: { palette }, isDisable, variant }) => {\n    let cl = palette.accent.primary_550\n    if (variant === 'filled') {\n      cl = palette.content.cnt_const_white\n    }\n    if (isDisable) {\n      cl = palette.content.cnt_050\n    }\n    return cl\n  }}\n  };\n`\n\nconst setColor = ({ palette }: DefaultTheme, { variant, isDisable }: Required<Pick<TButton, 'variant' | 'isDisable'>>): string => {\n  let cl = palette.accent.primary_500;\n  if (variant === 'filled') {\n    cl = palette.content.cnt_const_white\n  }\n  if (isDisable) {\n    cl = palette.content.cnt_050\n  }\n  return cl\n}\nconst pxBySize = ({ size }: Required<Pick<TButton, 'size'>>): string => {\n  let s = 0\n  switch (size) {\n    case 'small':\n      s = 12\n      break\n    case 'medium':\n      s = 14\n      break\n    case 'large':\n      s = 16\n      break\n  }\n  return `${s}px`\n}\n"],"names":["Button","forwardRef","text","isDisable","variant","size","icon","onClick","props","ref","textSize","jsxs","ButtonWrapper","IconsList","jsx","Typography","styled","palette","color","theme","setColor","cl","pxBySize","s"],"mappings":"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"}